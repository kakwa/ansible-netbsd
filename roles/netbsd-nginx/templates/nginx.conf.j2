user nginx;
worker_processes {{ nginx_worker_processes }};
pid /var/run/nginx.pid;

events {
    worker_connections {{ nginx_worker_connections }};
    use kqueue;
    multi_accept on;
}

http {
    include       /usr/pkg/etc/nginx/mime.types;
    default_type  application/octet-stream;

    {% if nginx_dns_resolvers is defined and nginx_dns_resolvers | length > 0 %}
    # DNS resolver for dynamic resolution of upstream hostnames
    # This enables nginx to resolve hostnames at runtime instead of startup
    resolver {{ nginx_dns_resolvers | join(' ') }} valid={{ nginx_dns_valid_time }}{% if not nginx_dns_ipv6 %} ipv6=off{% endif %};
    resolver_timeout {{ nginx_dns_timeout }};
    {% endif %}

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout {{ nginx_keepalive_timeout }};
    types_hash_max_size 2048;
    client_max_body_size {{ nginx_client_max_body_size }};

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    {% if nginx_hide_server_tokens %}
    server_tokens off;
    {% endif %}

    # SSL settings
    ssl_protocols {{ nginx_ssl_protocols }};
    ssl_ciphers {{ nginx_ssl_ciphers }};
    ssl_prefer_server_ciphers {{ nginx_ssl_prefer_server_ciphers }};
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Include site configurations
    include /usr/pkg/etc/nginx/sites-enabled/*;
}

